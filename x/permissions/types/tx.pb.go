// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: reapchain/permissions/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRegisterStandingMemberProposal struct {
	Title            string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ValidatorAddress string `protobuf:"bytes,3,opt,name=validatorAddress,proto3" json:"validatorAddress,omitempty"`
	AccountAddress   string `protobuf:"bytes,4,opt,name=accountAddress,proto3" json:"accountAddress,omitempty"`
	Moniker          string `protobuf:"bytes,5,opt,name=moniker,proto3" json:"moniker,omitempty"`
}

func (m *MsgRegisterStandingMemberProposal) Reset()         { *m = MsgRegisterStandingMemberProposal{} }
func (m *MsgRegisterStandingMemberProposal) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterStandingMemberProposal) ProtoMessage()    {}
func (*MsgRegisterStandingMemberProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_857f48d53ac4c464, []int{0}
}
func (m *MsgRegisterStandingMemberProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterStandingMemberProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterStandingMemberProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterStandingMemberProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterStandingMemberProposal.Merge(m, src)
}
func (m *MsgRegisterStandingMemberProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterStandingMemberProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterStandingMemberProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterStandingMemberProposal proto.InternalMessageInfo

func (m *MsgRegisterStandingMemberProposal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgRegisterStandingMemberProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgRegisterStandingMemberProposal) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

func (m *MsgRegisterStandingMemberProposal) GetAccountAddress() string {
	if m != nil {
		return m.AccountAddress
	}
	return ""
}

func (m *MsgRegisterStandingMemberProposal) GetMoniker() string {
	if m != nil {
		return m.Moniker
	}
	return ""
}

type MsgRegisterStandingMemberProposalResponse struct {
}

func (m *MsgRegisterStandingMemberProposalResponse) Reset() {
	*m = MsgRegisterStandingMemberProposalResponse{}
}
func (m *MsgRegisterStandingMemberProposalResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgRegisterStandingMemberProposalResponse) ProtoMessage() {}
func (*MsgRegisterStandingMemberProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_857f48d53ac4c464, []int{1}
}
func (m *MsgRegisterStandingMemberProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterStandingMemberProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterStandingMemberProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterStandingMemberProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterStandingMemberProposalResponse.Merge(m, src)
}
func (m *MsgRegisterStandingMemberProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterStandingMemberProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterStandingMemberProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterStandingMemberProposalResponse proto.InternalMessageInfo

type MsgRemoveStandingMemberProposal struct {
	Title            string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ValidatorAddress string `protobuf:"bytes,3,opt,name=validatorAddress,proto3" json:"validatorAddress,omitempty"`
}

func (m *MsgRemoveStandingMemberProposal) Reset()         { *m = MsgRemoveStandingMemberProposal{} }
func (m *MsgRemoveStandingMemberProposal) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveStandingMemberProposal) ProtoMessage()    {}
func (*MsgRemoveStandingMemberProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_857f48d53ac4c464, []int{2}
}
func (m *MsgRemoveStandingMemberProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveStandingMemberProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveStandingMemberProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveStandingMemberProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveStandingMemberProposal.Merge(m, src)
}
func (m *MsgRemoveStandingMemberProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveStandingMemberProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveStandingMemberProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveStandingMemberProposal proto.InternalMessageInfo

func (m *MsgRemoveStandingMemberProposal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgRemoveStandingMemberProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgRemoveStandingMemberProposal) GetValidatorAddress() string {
	if m != nil {
		return m.ValidatorAddress
	}
	return ""
}

type MsgRemoveStandingMemberProposalResponse struct {
}

func (m *MsgRemoveStandingMemberProposalResponse) Reset() {
	*m = MsgRemoveStandingMemberProposalResponse{}
}
func (m *MsgRemoveStandingMemberProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveStandingMemberProposalResponse) ProtoMessage()    {}
func (*MsgRemoveStandingMemberProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_857f48d53ac4c464, []int{3}
}
func (m *MsgRemoveStandingMemberProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveStandingMemberProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveStandingMemberProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveStandingMemberProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveStandingMemberProposalResponse.Merge(m, src)
}
func (m *MsgRemoveStandingMemberProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveStandingMemberProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveStandingMemberProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveStandingMemberProposalResponse proto.InternalMessageInfo

type MsgReplaceStandingMemberProposal struct {
	Title                       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description                 string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ExistingValidatorAddress    string `protobuf:"bytes,3,opt,name=existingValidatorAddress,proto3" json:"existingValidatorAddress,omitempty"`
	ReplacementValidatorAddress string `protobuf:"bytes,4,opt,name=replacementValidatorAddress,proto3" json:"replacementValidatorAddress,omitempty"`
	ReplacementAccountAddress   string `protobuf:"bytes,5,opt,name=replacementAccountAddress,proto3" json:"replacementAccountAddress,omitempty"`
	ReplacementMoniker          string `protobuf:"bytes,6,opt,name=replacementMoniker,proto3" json:"replacementMoniker,omitempty"`
}

func (m *MsgReplaceStandingMemberProposal) Reset()         { *m = MsgReplaceStandingMemberProposal{} }
func (m *MsgReplaceStandingMemberProposal) String() string { return proto.CompactTextString(m) }
func (*MsgReplaceStandingMemberProposal) ProtoMessage()    {}
func (*MsgReplaceStandingMemberProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_857f48d53ac4c464, []int{4}
}
func (m *MsgReplaceStandingMemberProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReplaceStandingMemberProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReplaceStandingMemberProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReplaceStandingMemberProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReplaceStandingMemberProposal.Merge(m, src)
}
func (m *MsgReplaceStandingMemberProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgReplaceStandingMemberProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReplaceStandingMemberProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReplaceStandingMemberProposal proto.InternalMessageInfo

func (m *MsgReplaceStandingMemberProposal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgReplaceStandingMemberProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgReplaceStandingMemberProposal) GetExistingValidatorAddress() string {
	if m != nil {
		return m.ExistingValidatorAddress
	}
	return ""
}

func (m *MsgReplaceStandingMemberProposal) GetReplacementValidatorAddress() string {
	if m != nil {
		return m.ReplacementValidatorAddress
	}
	return ""
}

func (m *MsgReplaceStandingMemberProposal) GetReplacementAccountAddress() string {
	if m != nil {
		return m.ReplacementAccountAddress
	}
	return ""
}

func (m *MsgReplaceStandingMemberProposal) GetReplacementMoniker() string {
	if m != nil {
		return m.ReplacementMoniker
	}
	return ""
}

type MsgReplaceStandingMemberProposalResponse struct {
}

func (m *MsgReplaceStandingMemberProposalResponse) Reset() {
	*m = MsgReplaceStandingMemberProposalResponse{}
}
func (m *MsgReplaceStandingMemberProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReplaceStandingMemberProposalResponse) ProtoMessage()    {}
func (*MsgReplaceStandingMemberProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_857f48d53ac4c464, []int{5}
}
func (m *MsgReplaceStandingMemberProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReplaceStandingMemberProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReplaceStandingMemberProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReplaceStandingMemberProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReplaceStandingMemberProposalResponse.Merge(m, src)
}
func (m *MsgReplaceStandingMemberProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReplaceStandingMemberProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReplaceStandingMemberProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReplaceStandingMemberProposalResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterStandingMemberProposal)(nil), "reapchain.permissions.v1.MsgRegisterStandingMemberProposal")
	proto.RegisterType((*MsgRegisterStandingMemberProposalResponse)(nil), "reapchain.permissions.v1.MsgRegisterStandingMemberProposalResponse")
	proto.RegisterType((*MsgRemoveStandingMemberProposal)(nil), "reapchain.permissions.v1.MsgRemoveStandingMemberProposal")
	proto.RegisterType((*MsgRemoveStandingMemberProposalResponse)(nil), "reapchain.permissions.v1.MsgRemoveStandingMemberProposalResponse")
	proto.RegisterType((*MsgReplaceStandingMemberProposal)(nil), "reapchain.permissions.v1.MsgReplaceStandingMemberProposal")
	proto.RegisterType((*MsgReplaceStandingMemberProposalResponse)(nil), "reapchain.permissions.v1.MsgReplaceStandingMemberProposalResponse")
}

func init() { proto.RegisterFile("reapchain/permissions/v1/tx.proto", fileDescriptor_857f48d53ac4c464) }

var fileDescriptor_857f48d53ac4c464 = []byte{
	// 401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0xcd, 0xaa, 0xd3, 0x40,
	0x14, 0xc7, 0x9b, 0xd6, 0x56, 0x3c, 0x82, 0xc8, 0xe0, 0x22, 0x7e, 0x10, 0xdb, 0x2c, 0xb4, 0xad,
	0x90, 0x50, 0x45, 0x10, 0x71, 0x61, 0xdd, 0x07, 0xa5, 0x82, 0x0b, 0x77, 0xd3, 0xe4, 0x30, 0x1d,
	0x4c, 0x66, 0x86, 0x99, 0x69, 0xa8, 0x0f, 0xe0, 0xde, 0xa7, 0x12, 0xdd, 0x75, 0xe9, 0x52, 0xda,
	0x17, 0x11, 0x27, 0xb6, 0x4d, 0x6f, 0xdb, 0xdb, 0xcd, 0x85, 0xbb, 0xcb, 0x9c, 0xff, 0xef, 0x84,
	0xff, 0xf9, 0x82, 0x9e, 0x46, 0xaa, 0xd2, 0x19, 0xe5, 0x22, 0x56, 0xa8, 0x0b, 0x6e, 0x0c, 0x97,
	0xc2, 0xc4, 0xe5, 0x28, 0xb6, 0x8b, 0x48, 0x69, 0x69, 0x25, 0xf1, 0xb7, 0x48, 0x54, 0x43, 0xa2,
	0x72, 0xf4, 0xe0, 0x11, 0x93, 0x92, 0xe5, 0x18, 0x53, 0xc5, 0x63, 0x2a, 0x84, 0xb4, 0xd4, 0x3a,
	0xc9, 0xe5, 0x85, 0xbf, 0x3c, 0xe8, 0x25, 0x86, 0x4d, 0x90, 0x71, 0x63, 0x51, 0x7f, 0xb4, 0x54,
	0x64, 0x5c, 0xb0, 0x04, 0x8b, 0x29, 0xea, 0x0f, 0x5a, 0x2a, 0x69, 0x68, 0x4e, 0xee, 0x41, 0xdb,
	0x72, 0x9b, 0xa3, 0xef, 0x75, 0xbd, 0xfe, 0xad, 0x49, 0xf5, 0x20, 0x5d, 0xb8, 0x9d, 0xa1, 0x49,
	0x35, 0x57, 0xff, 0xfe, 0xe8, 0x37, 0x9d, 0x56, 0x0f, 0x91, 0x21, 0xdc, 0x2d, 0x69, 0xce, 0x33,
	0x6a, 0xa5, 0x1e, 0x67, 0x99, 0x46, 0x63, 0xfc, 0x96, 0xc3, 0x0e, 0xe2, 0xe4, 0x09, 0xdc, 0xa1,
	0x69, 0x2a, 0xe7, 0xc2, 0x6e, 0xc8, 0x1b, 0x8e, 0xbc, 0x10, 0x25, 0x3e, 0xdc, 0x2c, 0xa4, 0xe0,
	0x5f, 0x50, 0xfb, 0x6d, 0x07, 0x6c, 0x9e, 0xe1, 0x33, 0x18, 0x9c, 0x2d, 0x65, 0x82, 0x46, 0x49,
	0x61, 0x30, 0xfc, 0xe6, 0xc1, 0x63, 0x47, 0x17, 0xb2, 0xc4, 0xeb, 0x2b, 0x3b, 0x1c, 0xc0, 0xd3,
	0x33, 0x36, 0xb6, 0x96, 0x7f, 0x34, 0xa1, 0xeb, 0x58, 0x95, 0xd3, 0xf4, 0xaa, 0x3d, 0xbf, 0x06,
	0x1f, 0x17, 0xdc, 0x58, 0x2e, 0xd8, 0xa7, 0xe3, 0xde, 0x4f, 0xea, 0xe4, 0x2d, 0x3c, 0xd4, 0x95,
	0xa9, 0x02, 0x85, 0x3d, 0x48, 0xaf, 0xe6, 0x78, 0x19, 0x42, 0xde, 0xc0, 0xfd, 0x9a, 0x3c, 0xde,
	0xdf, 0x83, 0x6a, 0xcc, 0xa7, 0x01, 0x12, 0x01, 0xa9, 0x89, 0xc9, 0xff, 0xed, 0xe8, 0xb8, 0xb4,
	0x23, 0x4a, 0x38, 0x84, 0xfe, 0xb9, 0x3e, 0x6e, 0x9a, 0xfe, 0xbc, 0x0d, 0xad, 0xc4, 0xb0, 0x77,
	0xef, 0x7f, 0xae, 0x02, 0x6f, 0xb9, 0x0a, 0xbc, 0x3f, 0xab, 0xc0, 0xfb, 0xbe, 0x0e, 0x1a, 0xcb,
	0x75, 0xd0, 0xf8, 0xbd, 0x0e, 0x1a, 0x9f, 0x5f, 0x32, 0x6e, 0x67, 0xf3, 0x69, 0x94, 0xca, 0x22,
	0xde, 0xdd, 0xe9, 0xee, 0xab, 0x7c, 0x15, 0x2f, 0xf6, 0xce, 0xd6, 0x7e, 0x55, 0x68, 0xa6, 0x1d,
	0x77, 0x7f, 0x2f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x09, 0x4e, 0x7c, 0xdc, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reapchain.permissions.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "reapchain/permissions/v1/tx.proto",
}

func (m *MsgRegisterStandingMemberProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterStandingMemberProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterStandingMemberProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AccountAddress) > 0 {
		i -= len(m.AccountAddress)
		copy(dAtA[i:], m.AccountAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AccountAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ValidatorAddress) > 0 {
		i -= len(m.ValidatorAddress)
		copy(dAtA[i:], m.ValidatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ValidatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterStandingMemberProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterStandingMemberProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterStandingMemberProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveStandingMemberProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveStandingMemberProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveStandingMemberProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValidatorAddress) > 0 {
		i -= len(m.ValidatorAddress)
		copy(dAtA[i:], m.ValidatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ValidatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveStandingMemberProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveStandingMemberProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveStandingMemberProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReplaceStandingMemberProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReplaceStandingMemberProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReplaceStandingMemberProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ReplacementMoniker) > 0 {
		i -= len(m.ReplacementMoniker)
		copy(dAtA[i:], m.ReplacementMoniker)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReplacementMoniker)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ReplacementAccountAddress) > 0 {
		i -= len(m.ReplacementAccountAddress)
		copy(dAtA[i:], m.ReplacementAccountAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReplacementAccountAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ReplacementValidatorAddress) > 0 {
		i -= len(m.ReplacementValidatorAddress)
		copy(dAtA[i:], m.ReplacementValidatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReplacementValidatorAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ExistingValidatorAddress) > 0 {
		i -= len(m.ExistingValidatorAddress)
		copy(dAtA[i:], m.ExistingValidatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExistingValidatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReplaceStandingMemberProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReplaceStandingMemberProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReplaceStandingMemberProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterStandingMemberProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ValidatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AccountAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterStandingMemberProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveStandingMemberProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ValidatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveStandingMemberProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReplaceStandingMemberProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ExistingValidatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReplacementValidatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReplacementAccountAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ReplacementMoniker)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgReplaceStandingMemberProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterStandingMemberProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterStandingMemberProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterStandingMemberProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterStandingMemberProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterStandingMemberProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterStandingMemberProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveStandingMemberProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveStandingMemberProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveStandingMemberProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveStandingMemberProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveStandingMemberProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveStandingMemberProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReplaceStandingMemberProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReplaceStandingMemberProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReplaceStandingMemberProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExistingValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExistingValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplacementValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplacementValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplacementAccountAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplacementAccountAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplacementMoniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReplacementMoniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReplaceStandingMemberProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReplaceStandingMemberProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReplaceStandingMemberProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
