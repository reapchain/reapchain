syntax = "proto3";
package reapchain.permissions.v1;
import "google/api/annotations.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/reapchain/reapchain/v8/x/permissions/types";

// Msg defines the Msg service.
service Msg {
//  rpc RegisterStandingMemberProposal(MsgRegisterStandingMemberProposal)
//      returns (MsgRegisterStandingMemberProposalResponse){
//    option (google.api.http).get =
//        "/reapchain/permissions/v1/tx/register_standing_member";
//  };
//
//  rpc RemoveStandingMemberProposal(MsgRemoveStandingMemberProposal)
//      returns (MsgRemoveStandingMemberProposalResponse){
//    option (google.api.http).get =
//        "/reapchain/permissions/v1/tx/remove_standing_member";
//  };
//
//  rpc RemoveStandingMemberProposal(MsgRemoveStandingMemberProposal)
//      returns (MsgRemoveStandingMemberProposalResponse){
//    option (google.api.http).get =
//        "/reapchain/permissions/v1/tx/replace_standing_member";
//  };
}

message MsgRegisterStandingMemberProposal {
  string title = 1;
  string description = 2;
  string validatorAddress = 3;
  string accountAddress = 4;
  string moniker = 5;
}

message MsgRegisterStandingMemberProposalResponse {
}

message MsgRemoveStandingMemberProposal {
  string title = 1;
  string description = 2;
  string validatorAddress = 3;
}

message MsgRemoveStandingMemberProposalResponse {
}

message MsgReplaceStandingMemberProposal {
  string title = 1;
  string description = 2;
  string existingValidatorAddress = 3;
  string replacementValidatorAddress = 4;
  string replacementAccountAddress = 5;
  string replacementMoniker = 6;
}

message MsgReplaceStandingMemberProposalResponse {
}

